{"version":3,"sources":["CreateBoard/CreateBoard.module.css","initialData.js","Task.js","Column.js","Board.js","CreateBoard/CreateBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialData","frontend","tasks","id","content","columns","title","taskIds","columnOrder","backend","Container","styled","div","props","isDragging","Task","draggableId","this","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Component","Title","h3","Header","label","CreateTask","input","isDraggingOver","TaskList","Column","column","data-name","name","data-column-id","onKeyDown","createTask","type","placeholder","droppableId","droppableProps","map","console","log","key","Wrapper","AddList","CreateColumn","Board","state","opened","onClickHandler","e","setState","addColumn","onClick","create","Object","keys","data","length","lastColumnId","board","onDragStart","dragStart","onDragEnd","dragEnd","columnId","taskId","header","p","Controls","Close","button","Cancel","Create","CreateBoard","onTitleClickHandler","onCloseButtonClickHandler","onCancelClickHandler","target","parentNode","previousElementSibling","value","className","classes","section","enterKeyDown","click","Label","Navigation","nav","List","ul","Item","li","App","start","onDragUpdate","update","result","source","destination","prefix","split","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskIds","newColumn","onEnterKeyHandler","lastTaskId","onCreateBoardHandler","onCreateColumnHandler","boardName","dataset","columnName","newColumnName","newBoard","push","newBoardProp","onCreateTaskHandler","boardId","href","to","boards","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b0e075f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateBoard_container__yjJjj\",\"header\":\"CreateBoard_header__3w_4W\",\"section\":\"CreateBoard_section__2VRCP\",\"controls\":\"CreateBoard_controls__1SwsX\"};","const initialData = {\r\n  frontend: {\r\n    tasks: {\r\n      \"frontend-task-1\": { id: \"frontend-task-1\", content: \"remove garbage\" },\r\n      \"frontend-task-2\": { id: \"frontend-task-2\", content: \"remove goverment\" },\r\n      \"frontend-task-3\": { id: \"frontend-task-3\", content: \"get a hairstyle\" },\r\n      \"frontend-task-4\": { id: \"frontend-task-4\", content: \"buy beer\" }\r\n    },\r\n    columns: {\r\n      \"frontend-column-1\": {\r\n        id: \"frontend-column-1\",\r\n        title: \"To do\",\r\n        taskIds: [\"frontend-task-1\", \"frontend-task-2\", \"frontend-task-3\", \"frontend-task-4\"]\r\n      },\r\n      \"frontend-column-2\": {\r\n        id: \"frontend-column-2\",\r\n        title: \"In progress\",\r\n        taskIds: []\r\n      },\r\n      \"frontend-column-3\": {\r\n        id: \"frontend-column-3\",\r\n        title: \"Done\",\r\n        taskIds: []\r\n      },\r\n    },\r\n    columnOrder: [\"frontend-column-1\", \"frontend-column-2\", \"frontend-column-3\"]\r\n  },\r\n   backend: {\r\n    tasks: {\r\n      \"backend-task-1\": { id: \"backend-task-1\", content: \"remove garbage\" },\r\n      \"backend-task-2\": { id: \"backend-task-2\", content: \"remove goverment\" },\r\n      \"backend-task-3\": { id: \"backend-task-3\", content: \"get a hairstyle\" },\r\n      \"backend-task-4\": { id: \"backend-task-4\", content: \"buy beer\" }\r\n    },\r\n    columns: {\r\n      \"backend-column-1\": {\r\n        id: \"backend-column-1\",\r\n        title: \"To do\",\r\n        taskIds: [\"backend-task-1\", \"backend-task-2\", \"backend-task-3\", \"backend-task-4\"]\r\n      },\r\n      \"backend-column-2\": {\r\n        id: \"backend-column-2\",\r\n        title: \"In progress\",\r\n        taskIds: []\r\n      },\r\n      \"backend-column-3\": {\r\n        id: \"backend-column-3\",\r\n        title: \"Done\",\r\n        taskIds: []\r\n      },\r\n    },\r\n    columnOrder: [\"backend-column-1\", \"backend-column-2\", \"backend-column-3\"]\r\n  }\r\n\r\n};\r\n\r\nexport default initialData;\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nconst Container = styled.div`\r\nborder: 1px solid lightgrey;\r\npadding: 8px;\r\nmargin-botton: 8px;\r\nborder-radius: 2px;\r\nbackground-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\r\n`;\r\n\r\nexport default class Task extends Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.task} index={this.props.index}>\r\n        {(provided, snapshot)=> (\r\n          <Container isDragging={snapshot.isDragging} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>{ this.props.content}</Container>\r\n        )}\r\n      </Draggable>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Task from './Task';\r\nimport {Droppable} from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\nmargin: 8px;\r\nborder: 1px solid lightgrey;\r\nborder-radius: 2px;\r\nmin-width: 250px;\r\ndisplay: flex;\r\nflex-direction: column;`;\r\n\r\nconst Title = styled.h3`\r\npadding: 8px`;\r\n\r\n\r\nconst Header = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\npadding: 8px;\r\n`;\r\n\r\n\r\nconst CreateTask = styled.input`\r\npadding: 8px;\r\nborder: 1px solid lightgrey;\r\nborder-radius: 2px;\r\ntext-align: center;\r\ntransition: background-color 0.2s ease;\r\nbackground-color: ${props => (props.isDraggingOver ? 'skyblue' : 'white')};\r\n`;\r\n\r\nconst TaskList = styled.div`\r\npadding: 8px;\r\ntransition: background-color 0.2s ease;\r\nbackground-color: ${props => (props.isDraggingOver ? 'skyblue' : 'white')};\r\nflex-grow: 1;\r\n`;\r\n\r\n\r\n\r\nexport default class Column extends Component {\r\n\r\n  render() {\r\n    let title;\r\n    if(this.props.column.title) title = <Title>{ this.props.column.title }</Title>\r\n\r\n\r\n    return (\r\n      <Container>\r\n        {title}\r\n        <Header data-name={this.props.name}>\r\n          <p>Создать новый таск </p>\r\n          <CreateTask data-column-id={this.props.id} onKeyDown={this.props.createTask} type=\"text\" placeholder=\"add task\"/>\r\n        </Header>\r\n        <Droppable droppableId={this.props.column.id}>\r\n        {(provided, snapshot) => (\r\n          <TaskList \r\n          isDraggingOver={snapshot.isDraggingOver} \r\n          {...provided.droppableProps} ref={provided.innerRef}> \r\n            {this.props.tasks.map((task, index) => {\r\n              console.log(task, 'task rendered')\r\n              if(task !== 'No tasks') {\r\n                return <Task key={task.id} task={task.id} content={task.content} index={index}/>;\r\n              }\r\n            }) } \r\n          {provided.placeholder}\r\n          </TaskList>\r\n          \r\n        )}\r\n        </Droppable>\r\n        \r\n      </Container>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Column from './Column';\r\n\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;`;\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-start;\r\nalign-items: flex-start;\r\n`;\r\n\r\nconst AddList = styled.label`\r\nborder: 1px solid lightgrey;\r\nborder-radius: 2px;\r\nmargin: 8px;\r\nwidth: 250px;\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nalign-items: center;\r\npadding: 8px;\r\npadding-bottom: 16px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n`;\r\n\r\nconst CreateColumn = styled.input``;\r\n\r\n\r\n\r\nexport default class Board extends Component {\r\n  state= {\r\n    opened: false\r\n  }\r\n\r\n  onClickHandler = (e) => {\r\n    let { opened } = this.state;\r\n    opened = !opened;\r\n    this.setState(\r\n      {\r\n        opened: opened\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let addColumn = (\r\n      <AddList data-name={this.props.name}>\r\n      <Title onClick={this.onClickHandler}>Создать новую доску </Title>\r\n      </AddList>);\r\n\r\n    if(this.state.opened) {\r\n      addColumn = (\r\n      <AddList data-name={this.props.name}>\r\n      <CreateColumn onKeyDown={this.props.create} type=\"text\"/>\r\n      <button onClick={this.onClickHandler} type=\"button\"> Закрыть </button>\r\n      </AddList>\r\n    )\r\n    }\r\n\r\n    if(Object.keys(this.props.data).length < 2) {\r\n      return (\r\n        <div>\r\n          {addColumn}\r\n        </div>\r\n      )\r\n    } else if(this.props.data.lastColumnId === 0) {\r\n      return (\r\n        <div>\r\n          {addColumn}\r\n        </div>\r\n      )\r\n    } else {\r\n      return(\r\n        <Wrapper>\r\n          <DragDropContext key={this.props.board} onDragStart={this.props.dragStart} onDragEnd={this.props.dragEnd}>\r\n              <Container>\r\n              {\r\n                  this.props.data.columnOrder.map(columnId => {\r\n                    const column =  this.props.data.columns[columnId];\r\n                    let tasks;\r\n                    if(typeof column.taskIds !== 'undefined' && Object.keys(column.taskIds).length !== 0) {\r\n                      tasks = column.taskIds.map(taskId => this.props.data.tasks[taskId]);\r\n                    } else {\r\n                      tasks = ['No tasks']\r\n                    }\r\n                    return <Column id={columnId} name={this.props.name} createTask={this.props.createTask} key={column.id} column={column} tasks={tasks}/>\r\n                    })\r\n                \r\n              }\r\n                {addColumn}\r\n              </Container>\r\n          </DragDropContext>\r\n\r\n        </Wrapper>\r\n      )\r\n    }\r\n\r\n    \r\n  }\r\n}","import React, {Component} from 'react';\r\nimport classes from './CreateBoard.module.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 250px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.p``;\r\n\r\nconst Controls = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  margin: 15px 0px;\r\n  `;\r\n\r\nconst Close = styled.button`\r\n`;\r\n\r\nconst Cancel = styled.button`\r\n\r\n`;\r\nconst Create = styled.button`\r\n`;\r\n\r\nexport default class CreateBoard extends Component {\r\n  state = {\r\n    opened: false\r\n  }\r\n\r\n  onTitleClickHandler = (e) => {\r\n    this.setState({\r\n      opened: true\r\n    })\r\n  }\r\n\r\n  onCloseButtonClickHandler = (e) => {\r\n    this.setState({\r\n      opened: false\r\n    })\r\n  }\r\n\r\n  onCancelClickHandler = (e) => {\r\n    e.target.parentNode.previousElementSibling.value = '';\r\n  }\r\n\r\n  render() {\r\n    let content = (\r\n      <Container>\r\n        <Header>\r\n          <Title onClick={this.onTitleClickHandler}>Create new board</Title>\r\n        </Header>\r\n      </Container>\r\n      \r\n    );\r\n    if(this.state.opened) {\r\n      content = (\r\n        <Container>\r\n        <Header className={classes.header}>\r\n          <Title>Creating a board...</Title>\r\n          <Close onClick={this.onCloseButtonClickHandler} type=\"button\">Close</Close>\r\n        </Header>\r\n        \r\n        <div className={classes.section}>\r\n          <p> Как будет называться доска? </p>\r\n          <input onKeyDown={this.props.enterKeyDown} type=\"text\"/>\r\n          <Controls>\r\n            <Cancel onClick={this.onCancelClickHandler} type=\"button\"> Отмена </Cancel>\r\n            <Create onClick={this.props.click} type=\"button\"> Создать </Create>\r\n          </Controls>\r\n        </div>\r\n      </Container>  \r\n      )\r\n    }\r\n\r\n\r\n    return content;\r\n  }\r\n}\r\n","import React, {Component} from 'react';\nimport initialData from './initialData';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport Board from './Board';\nimport CreateBoard from './CreateBoard/CreateBoard';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst Label = styled.div`\nborder: 1px solid lightgrey;\nwidth: 200px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 25px;\nmargin: 10px;\nbackground-color: white;\n`;\n\nconst Navigation = styled.nav`\n`;\n\nconst List = styled.ul`\ndisplay: flex;\nlist-style-type: none;\n`;\n\nconst Item = styled.li``;\n\n\n\nclass App extends Component {\n  state = initialData;\n\n  onDragStart = (start) => {\n    \n  }\n\n  onDragUpdate = (update) => {\n\n  }\n\n  onDragEnd = result => {\n    const {draggableId, source, destination} = result;\n\n    if(destination === null) {\n      return;\n    }\n    \n    if(source.index === destination.index && source.droppableId === destination.droppableId) {\n      return;\n    }\n    \n\n    const prefix = draggableId.split('-')[0];\n    const start = this.state[prefix].columns[source.droppableId];\n    const finish =  this.state[prefix].columns[destination.droppableId];;\n\n    if(start === finish) {\n      const column = this.state[prefix].columns[source.droppableId];\n      const newTaskIds = Array.from(column.taskIds);\n  \n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n  \n      const newColumn = {\n        ...column,\n        taskIds: newTaskIds\n      };\n  \n  \n      const newState = {\n        ...this.state,\n        [prefix]: {\n          ...this.state[prefix],\n          columns: {\n            ...this.state[prefix].columns,\n            [newColumn.id]: newColumn\n          }\n        }\n      }\n  \n  \n    this.setState(newState);\n    return;\n    }\n\n    if(start !== finish) {\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n\n      const newStart = {\n        ...start,\n        taskIds: startTaskIds\n      };\n\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n\n      const newFinish = {\n        ...finish,\n        taskIds: finishTaskIds\n      };\n\n      const newState = {\n        ...this.state,\n        [prefix]: {\n          ...this.state[prefix],\n          columns: {\n            ...this.state[prefix].columns,\n            [newStart.id]: newStart,\n            [newFinish.id]: newFinish\n          }\n        }\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    return;\n  }\n\n  onEnterKeyHandler = (e) => {\n    if(e.key === 'Enter') {\n      const newState = {\n        ...this.state,\n        [e.target.value]: {\n          tasks: {},\n          columns: {},\n          columnOrder: [],\n          lastColumnId: 0,\n          lastTaskId: 0\n        },\n      }\n      \n      this.setState(newState);\n      \n      e.target.value = '';\n    }\n  }\n\n  onCreateBoardHandler = e => {\n    const input = e.target.parentNode.previousElementSibling;\n    const value = input.value\n    \n    const newState = {\n      ...this.state,\n      [value]: {\n        tasks: {},\n        columns: {},\n        columnOrder: [],\n        lastColumnId: 0,\n        lastTaskId: 0\n      },\n    }\n    input.value = '';\n    this.setState(newState);\n    \n  }\n\n  onCreateColumnHandler = (e) => {\n    if(e.key === 'Enter') {\n      const boardName = e.target.parentNode.dataset.name;\n      const columnName = e.target.value;\n\n\n      const { lastColumnId } = this.state[boardName];\n      \n      \n\n      const newColumnName = `${boardName}-column-${lastColumnId + 1}`;\n\n      const newColumn = {\n          id: newColumnName,\n          title: columnName,\n          taskIds: [], \n      };\n\n\n      const newBoard = {\n        ...this.state[boardName],\n        columns: {\n          ...this.state[boardName].columns,\n          [newColumnName]: newColumn\n        }\n      };\n\n\n      newBoard.columnOrder.push(newColumnName);\n      newBoard.lastColumnId = newBoard.lastColumnId + 1;\n\n      const newBoardProp = {\n        [boardName]: newBoard\n      };\n\n\n\n      console.log(newBoardProp)\n\n  \n      \n      const newState = {\n        ...this.state,\n        [boardName]: newBoard\n      }\n\n\n      this.setState(newState); \n\n\n      e.target.value = '';\n      }\n    }\n\n    onCreateTaskHandler = (e) => {\n      if(e.key === 'Enter') {\n        console.log('Someone wanna create a task');\n        console.log(e.target.dataset);\n\n        const columnId = e.target.dataset.columnId;\n        const boardId = columnId.split('-')[0];\n        \n\n        const { [boardId]: board } = this.state;\n\n        const taskId = `${boardId}-task-${board.lastTaskId + 1}`;\n        console.log(taskId, 'is task id')\n\n        console.log(board.columns)\n        const newTaskIds = board.columns[columnId].taskIds.push(taskId);\n\n        const newState = {\n          ...board,\n          tasks: {\n            ...board.tasks,\n            [taskId]: {\n              id: taskId,\n              content: e.target.value,\n            }\n          },\n          columns: {\n            ...board.columns,\n            [boardId]: {\n              ...board.columns[boardId],\n              taskIds: newTaskIds\n            }\n          }\n        };\n\n        newState.lastTaskId = newState.lastTaskId + 1;\n\n        this.setState({\n          ...this.state,\n          [boardId]: newState\n        })\n\n\n        e.target.value = '';\n      }\n    }\n\n    on\n\n\n  render() {\n    const nav =  Object.keys(this.state).map(label => {\n      const href=`/${label}`\n      return (\n        <Item>\n          <Link to={href}>\n            <Label> { label }</Label>\n          </Link>\n        </Item>\n      )\n    })\n\n\n    const boards = Object.keys(this.state).map(board => {\n      const href=`/${board}`;\n\n      return (\n        <Route path={href}>\n          <Link to=\"/\"> Go home </Link>\n\n          <Board\n          createTask={this.onCreateTaskHandler}\n          create={this.onCreateColumnHandler}\n          dragStart={this.onDragStart} \n          dragEnd={this.onDragEnd} \n          data={this.state[board]} \n          name={board}/>\n        </Route>\n      )\n  })\n\n    return (\n      <Router>\n        <div>\n        \n\n        <Switch>\n          {boards} \n          <Route path='/'>\n          <CreateBoard  click={this.onCreateBoardHandler} enterKeyDown={this.onEnterKeyHandler}/>\n          <Navigation>\n            <List>\n              {nav}\n    \n            </List>\n          </Navigation>\n          </Route>\n        </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}